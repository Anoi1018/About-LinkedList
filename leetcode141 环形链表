给定一个链表，判断链表中是否有环。

为了表示给定链表中的环，我们使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。 如果 pos 是 -1，则在该链表中没有环。

示例 1：
输入：head = [3,2,0,-4], pos = 1
输出：true
解释：链表中有一个环，其尾部连接到第二个节点。

示例 2：
输入：head = [1], pos = -1
输出：false
解释：链表中没有环。


进阶：
你能用 O(1)（即，常量）内存解决此问题吗？

代码示意：
1.常规map
var hasCycle = function(head) {
     if(head===null) return false;
     let map = new Map();
     while(head){
         if(map.get(head)){
             return true;
         }else {
              map.set(head,1);
              head = head.next;
         }
    }
    return false;
};
2.map思维-flag标记
var hasCycle = function(head) {
     if(head===null) return false;
     
     while(head){
         if(head.flag){
             return true;
         }else {
              head.flag = 1;
              head = head.next;
         }
    }
    return false;
};
3.快慢指针 空间复杂度O（1）
var hasCycle = function(head) {
     if(head===null || head.next===null) return false;
     
     var slow = head,fast = head.next;
     while(fast && fast.next){
         if(slow === fast){
             return true;
         }
         slow = slow.next;
         fast = fast.next.next;
     }
     return false;
};
